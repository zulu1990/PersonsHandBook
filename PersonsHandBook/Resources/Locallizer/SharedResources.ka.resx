<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Can't Get Report" xml:space="preserve">
    <value>შეუძლებელია კონტაქტების რეპორტის ნახვა მოთხოვნილი იუზერისთვის {0}</value>
  </data>
  <data name="Cant Create New Person" xml:space="preserve">
    <value>მომხმარებლის დამატებისას მოხდა შეცდომა</value>
  </data>
  <data name="Contact Not Found" xml:space="preserve">
    <value>ამ მონაცემებით კონტაქტი არ მოიძებნა</value>
  </data>
  <data name="Contacts Not Found" xml:space="preserve">
    <value>მოთხოვნილ იუზერი {0} არ არსებობს / არ ყავს კონტაქტები</value>
  </data>
  <data name="Could Not Delete Contact" xml:space="preserve">
    <value>კონტაქტის წაშლისას მოხდა შეცდომა</value>
  </data>
  <data name="Error Edit Person" xml:space="preserve">
    <value>მოხდა შეცდინა მომხმარებლის ინფორმაციის შეცვლისას</value>
  </data>
  <data name="Error Remove Person" xml:space="preserve">
    <value>შეცდომა მომხმარებლის წაშლისას</value>
  </data>
  <data name="Error Remove Photo" xml:space="preserve">
    <value>ფოტოს ჭაშლისას დაფიქსირდა შეცდომა</value>
  </data>
  <data name="Error Update Contact" xml:space="preserve">
    <value>მოხდა შეცდომა კონტაქტის განახლების დროს</value>
  </data>
  <data name="Exception" xml:space="preserve">
    <value>მოთხოვნის შესრულებისას დაფიქსირდა შეცდომა</value>
  </data>
  <data name="Invalid Name Length" xml:space="preserve">
    <value>არასწორი ზომა, სიგრძე უნდა იყოს {0} დან {1} მდე</value>
  </data>
  <data name="Object Is Null" xml:space="preserve">
    <value>მოთხოვნილი ობიექტი არ არსებობს</value>
  </data>
  <data name="One Language Letters" xml:space="preserve">
    <value>უნდა შეიცავდეს მხოლოდ ქართულ ან ინგლისურ ასოებს</value>
  </data>
  <data name="Person Not Found" xml:space="preserve">
    <value>მომხმარებელი ვერ მოიძებნა</value>
  </data>
  <data name="Photo Not Found" xml:space="preserve">
    <value>სურათის მოძებნა ვერ მოხერხდა მოთხოვნილი პარამეტრებით მომხმარებელი: {0} კონტაქტი: {1}</value>
  </data>
  <data name="testlocalization" xml:space="preserve">
    <value>ვტესტავთ ლოკალიზაციას</value>
    <comment>სატესტო რესურსი</comment>
  </data>
  <data name="The City field is required." xml:space="preserve">
    <value>სდასდასდ </value>
  </data>
</root>